name: e2e Playwright GAD tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    environment: test-env-gad
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: '**/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Clone GAD repo
        run: git clone https://github.com/jaktestowac/gad-gui-api-demo.git

      - name: Install GAD dependencies
        run: |
          cd gad-gui-api-demo
          npm install

      - name: Start GAD application
        run: |
          cd gad-gui-api-demo
          npm run start &
          sleep 10

      - name: Check GAD status
        run: |
          curl http://localhost:3000/api/about
          curl http://localhost:3000/api/health

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ vars.BASE_URL }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
          USER_INCORRECT_EMAIL: ${{ secrets.USER_INCORRECT_EMAIL }}
          USER_INCORRECT_PASSWORD: ${{ secrets.USER_INCORRECT_PASSWORD }}
        run: npm run test

      - name: Archive tests results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Test Report
          path: |
            ./playwright-report/**/*.*

      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: './playwright-report/results.xml'